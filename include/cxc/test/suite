#pragma once

#include <cxc/test/export>
#include <functional>
#include <string>
#include <memory>

namespace cxc
{
    namespace test
    {
        typedef std::function<void(suite&)> test_case;

        class cxc_test_public suite
        {
        public:
            suite(const std::string& name);
            suite(const suite& owner, const std::string& name);
            virtual ~suite();

            virtual void add(const test_case& new_case);

            virtual void run();

            virtual void setup();
            virtual void release();

            virtual const std::string& get_name() const;
            virtual const std::string& get_path() const;
            virtual const suite& get_owner() const;

            static suite& global();

        private:
            class data;

            friend class suite::data;

            std::shared_ptr<data> m_data;
        };
    }
}
